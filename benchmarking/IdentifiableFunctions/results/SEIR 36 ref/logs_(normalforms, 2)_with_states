â”Œ Warning: Module Groebner with build ID fafbfcfd-36ca-1ab6-0000-0c12f01cbcb6 is missing from the cache.
â”‚ This may mean Groebner [0b43b601-686d-58a3-8a1c-6623616c7cd4] does not support precompilation but is imported by a module that does.
â”” @ Base loading.jl:1793
WARNING: using OrdinaryDiffEq.islinear in module ModelingToolkit conflicts with an existing identifier.
WARNING: using OrdinaryDiffEq.isconstant in module ModelingToolkit conflicts with an existing identifier.
â”Œ Warning: The call to compilecache failed to create a usable precompiled cache file for SparseDiffToolsSymbolicsExt [cd430d6f-1330-5ba3-8763-ae950e38ad4f]
â”‚   exception = Invalid input in module list: expected Symbolics.
â”” @ Base loading.jl:1818
â”Œ Error: Error during loading of extension SparseDiffToolsSymbolicsExt of SparseDiffTools, use `Base.retry_load_extensions()` to retry.
â”‚   exception =
â”‚    1-element ExceptionStack:
â”‚    Declaring __precompile__(false) is not allowed in files that are being precompiled.
â”‚    Stacktrace:
â”‚      [1] _require(pkg::Base.PkgId, env::Nothing)
â”‚        @ Base ./loading.jl:1825
â”‚      [2] _require_prelocked(uuidkey::Base.PkgId, env::Nothing)
â”‚        @ Base ./loading.jl:1660
â”‚      [3] _require_prelocked(uuidkey::Base.PkgId)
â”‚        @ Base ./loading.jl:1658
â”‚      [4] run_extension_callbacks(extid::Base.ExtensionId)
â”‚        @ Base ./loading.jl:1255
â”‚      [5] run_extension_callbacks(pkgid::Base.PkgId)
â”‚        @ Base ./loading.jl:1290
â”‚      [6] run_package_callbacks(modkey::Base.PkgId)
â”‚        @ Base ./loading.jl:1124
â”‚      [7] _tryrequire_from_serialized(modkey::Base.PkgId, path::String, ocachepath::String, sourcepath::String, depmods::Vector{Any})
â”‚        @ Base ./loading.jl:1398
â”‚      [8] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String, build_id::UInt128)
â”‚        @ Base ./loading.jl:1494
â”‚      [9] _require(pkg::Base.PkgId, env::String)
â”‚        @ Base ./loading.jl:1783
â”‚     [10] _require_prelocked(uuidkey::Base.PkgId, env::String)
â”‚        @ Base ./loading.jl:1660
â”‚     [11] macro expansion
â”‚        @ ./loading.jl:1648 [inlined]
â”‚     [12] macro expansion
â”‚        @ ./lock.jl:267 [inlined]
â”‚     [13] require(into::Module, mod::Symbol)
â”‚        @ Base ./loading.jl:1611
â”‚     [14] include(mod::Module, _path::String)
â”‚        @ Base ./Base.jl:457
â”‚     [15] include(x::String)
â”‚        @ ModelingToolkit ~/.julia/packages/ModelingToolkit/okjHa/src/ModelingToolkit.jl:4
â”‚     [16] top-level scope
â”‚        @ ~/.julia/packages/ModelingToolkit/okjHa/src/ModelingToolkit.jl:124
â”‚     [17] include
â”‚        @ ./Base.jl:457 [inlined]
â”‚     [18] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt128}}, source::String)
â”‚        @ Base ./loading.jl:2049
â”‚     [19] top-level scope
â”‚        @ stdin:3
â”‚     [20] eval
â”‚        @ ./boot.jl:370 [inlined]
â”‚     [21] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
â”‚        @ Base ./loading.jl:1903
â”‚     [22] include_string
â”‚        @ ./loading.jl:1913 [inlined]
â”‚     [23] exec_options(opts::Base.JLOptions)
â”‚        @ Base ./client.jl:305
â”‚     [24] _start()
â”‚        @ Base ./client.jl:522
â”” @ Base loading.jl:1261
WARNING: using OrdinaryDiffEq.isconstant in module ModelingToolkit conflicts with an existing identifier.
WARNING: using OrdinaryDiffEq.islinear in module ModelingToolkit conflicts with an existing identifier.
â”Œ Info: 
â””   FUNCTION_NAME = "find_identifiable_functions"
â”Œ Info: 
â””   PROBLEM_NAME = "SEIR 36 ref"
â”Œ Info: 
â””   KWARGS = (with_states = true, strategy = (:normalforms, 2))
â”Œ Info: 
â””   GLOBAL_ID = Symbol("(:normalforms, 2)_with_states")
â”Œ Warning: The call to compilecache failed to create a usable precompiled cache file for ModelingToolkit [961ee093-0014-501f-94e3-6117800e7a78]
â”‚   exception = Required dependency Symbolics [0c5d862f-8b57-4792-8d23-62f2024744c7] failed to load from a cache file.
â”” @ Base loading.jl:1818
[ Info: Summary of the model:
[ Info: State variables: N, nu, q, S, E, I, De, Di, R, F
[ Info: Parameters: gamma, phi, mu_0, s_d, mu_d, s, mu_i, beta, phi_e, gamma_d, beta_d
[ Info: Inputs: 
[ Info: Outputs: y1, y2, y5, y3, y4, y6
[ Info: Summary of the model:
[ Info: State variables: x1, x2
[ Info: Parameters: a, b, d, c
[ Info: Inputs: 
[ Info: Outputs: y
[ Info: Computing IO-equations
â”Œ Info: Computed in 15.281896062 seconds
â”‚   :ioeq_time = :ioeq_time
â””   ioeq_time = 15.281896062
[ Info: Computing Wronskians
â”Œ Info: Computed in 11.984745988 seconds
â”‚   :wrnsk_time = :wrnsk_time
â””   wrnsk_time = 11.984745988
[ Info: Dimensions of the Wronskians [47, 1, 4, 5, 1, 1]
â”Œ Info: Ranks of the Wronskians computed in 0.033317953 seconds
â”‚   :rank_time = :rank_time
â””   rank_times = 0.033317953
â”Œ Warning: One of the Wronskians has corank greater than one, so the results of the algorithm will be valid only for multiexperiment identifiability. If you still  would like to assess single-experiment identifiability, we recommend using SIAN (https://github.com/alexeyovchinnikov/SIAN-Julia)
â”” @ StructuralIdentifiability ~/StructuralIdentifiability.jl/src/global_identifiability.jl:111
âŒœ # Computing specializations..  	 Time: 0:00:09[Kâœ“ # Computing specializations..  	 Time: 0:00:10[K
âŒœ # Computing specializations..  	 Time: 0:00:04[Kâœ“ # Computing specializations..  	 Time: 0:00:04[K
[ Info: Simplifying identifiable functions
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”” Assess correctness: false
â”Œ Info: Basis interpolated exponents summary:
â”‚ Maximal interpolated degrees are: 1 for num. and 0 for den.
â”‚ Maximal number of interpolated terms are: 1 for num. and 1 for den.
â”” Points used: 6.
[ Info: Groebner basis computed in 12.629419526 seconds
[ Info: Checking two-sided inclusion modulo a prime
[ Info: Inclusion checked in 4.354744416 seconds. Result: true
[ Info: The coefficients of the Groebner basis are presented by 12 rational functions
â”Œ Info: Final cleaning and simplification of generators. 
â”” Out of 11 fractions 11 are syntactically unique.
[ Info: Checking inclusion with probability 0.995
[ Info: Inclusion checked in 4.929207254 seconds. Result: true
[ Info: Out of 53 initial generators there are 11 indepdendent
[ Info: The ranking of the new set of generators is 66
[ Info: Simplifying identifiable functions
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”” Assess correctness: false
â”Œ Info: Basis interpolated exponents summary:
â”‚ Maximal interpolated degrees are: 1 for num. and 2 for den.
â”‚ Maximal number of interpolated terms are: 1 for num. and 1 for den.
â”” Points used: 10.
[ Info: Groebner basis computed in 5.272475063 seconds
[ Info: Checking two-sided inclusion modulo a prime
[ Info: Inclusion checked in 1.495628862 seconds. Result: true
[ Info: The coefficients of the Groebner basis are presented by 22 rational functions
â”Œ Info: Computing normal forms (probabilistic)
â”‚ Variables (21 in total): Nemo.QQMPolyRingElem[gamma, phi, mu_0, s_d, mu_d, s, mu_i, beta, phi_e, gamma_d, beta_d, N, nu, q, S, E, I, De, Di, R, F]
â”‚ Up to degree: 2
â”” Modulo: Finite field of characteristic 1073741827
[ Info: Used specialization points: 21
â”Œ Info: Final cleaning and simplification of generators. 
â”” Out of 41 fractions 21 are syntactically unique.
[ Info: Checking inclusion with probability 0.995
[ Info: Inclusion checked in 1.73342245 seconds. Result: true
[ Info: Out of 23 initial generators there are 20 indepdendent
[ Info: The ranking of the new set of generators is 210
[ Info: The search for identifiable functions concluded in 79.28406249 seconds
[ Info: Processing SEIR 36 ref
â”Œ Info: Averaging over 1 runs.
â”‚ Using keyword arguments:
â”‚ NamedTuple{(:with_states, :strategy), Tuple{Bool, Tuple{Symbol, Int64}}}
â”‚ (with_states = true, strategy = (:normalforms, 2))
â”” ID: (:normalforms, 2)_with_states
[ Info: Computing IO-equations
â”Œ Info: Computed in 0.276944784 seconds
â”‚   :ioeq_time = :ioeq_time
â””   ioeq_time = 0.276944784
[ Info: Computing Wronskians
â”Œ Info: Computed in 0.213127533 seconds
â”‚   :wrnsk_time = :wrnsk_time
â””   wrnsk_time = 0.213127533
[ Info: Dimensions of the Wronskians [47, 1, 4, 5, 1, 1]
â”Œ Info: Ranks of the Wronskians computed in 9.4804e-5 seconds
â”‚   :rank_time = :rank_time
â””   rank_times = 9.4804e-5
â”Œ Warning: One of the Wronskians has corank greater than one, so the results of the algorithm will be valid only for multiexperiment identifiability. If you still  would like to assess single-experiment identifiability, we recommend using SIAN (https://github.com/alexeyovchinnikov/SIAN-Julia)
â”” @ StructuralIdentifiability ~/StructuralIdentifiability.jl/src/global_identifiability.jl:111
[ Info: Simplifying identifiable functions
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”” Assess correctness: false
â”Œ Info: Basis interpolated exponents summary:
â”‚ Maximal interpolated degrees are: 1 for num. and 0 for den.
â”‚ Maximal number of interpolated terms are: 1 for num. and 1 for den.
â”” Points used: 6.
[ Info: Groebner basis computed in 0.011362526 seconds
[ Info: Checking two-sided inclusion modulo a prime
[ Info: Inclusion checked in 0.045797608 seconds. Result: true
[ Info: The coefficients of the Groebner basis are presented by 12 rational functions
â”Œ Info: Final cleaning and simplification of generators. 
â”” Out of 11 fractions 11 are syntactically unique.
[ Info: Checking inclusion with probability 0.995
[ Info: Inclusion checked in 0.006916743 seconds. Result: true
[ Info: Out of 53 initial generators there are 11 indepdendent
[ Info: The ranking of the new set of generators is 66
[ Info: Simplifying identifiable functions
â”Œ Info: Computing parametric Groebner basis up to degrees (2, 2)
â”‚ Ordering, input / target: degrevlex / InputOrdering
â”‚ Rational interpolator: VanDerHoevenLecerf
â”‚ Polynomial interpolator: PrimesBenOrTiwari
â”‚ Estimate degrees: true
â”” Assess correctness: false
â”Œ Info: Basis interpolated exponents summary:
â”‚ Maximal interpolated degrees are: 1 for num. and 2 for den.
â”‚ Maximal number of interpolated terms are: 1 for num. and 1 for den.
â”” Points used: 10.
[ Info: Groebner basis computed in 0.015326926 seconds
[ Info: Checking two-sided inclusion modulo a prime
[ Info: Inclusion checked in 0.00322329 seconds. Result: true
[ Info: The coefficients of the Groebner basis are presented by 22 rational functions
â”Œ Info: Computing normal forms (probabilistic)
â”‚ Variables (21 in total): Nemo.QQMPolyRingElem[gamma, phi, mu_0, s_d, mu_d, s, mu_i, beta, phi_e, gamma_d, beta_d, N, nu, q, S, E, I, De, Di, R, F]
â”‚ Up to degree: 2
â”” Modulo: Finite field of characteristic 1073741827
[ Info: Used specialization points: 21
â”Œ Info: Final cleaning and simplification of generators. 
â”” Out of 41 fractions 21 are syntactically unique.
[ Info: Checking inclusion with probability 0.995
[ Info: Inclusion checked in 0.004013308 seconds. Result: true
[ Info: Out of 23 initial generators there are 20 indepdendent
[ Info: The ranking of the new set of generators is 210
[ Info: The search for identifiable functions concluded in 0.777361048 seconds
â”Œ Info: Result is
â”‚   result =
â”‚    20-element Vector{AbstractAlgebra.Generic.Frac{Nemo.QQMPolyRingElem}}:
â”‚     F
â”‚     Di
â”‚     De
â”‚     I
â”‚     â‹®
â”‚     mu_0
â”‚     phi
â””     gamma
