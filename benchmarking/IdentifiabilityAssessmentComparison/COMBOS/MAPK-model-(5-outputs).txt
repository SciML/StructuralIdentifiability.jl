dx1/dt = c0001*x7 + x4*gamma1101 - x12*alpha01*x10 + x3*beta01 - x5*x10*a01 + x1*b01; dx2/dt = -a10*x5*x8 + x4*gamma1110 - x12*alpha10*x8 + x2*b10 + beta10*x6 + c0010*x7; dx3/dt = x4*beta11 - x12*alpha11*x11 + x2*c1011 + c0111*x1 + c0011*x7; dx4/dt = -c0111*x1 + x5*x10*a01 - x1*b01; dx5/dt = a10*x5*x8 - x2*b10 - x2*c1011; dx6/dt = -c0001*x7 - b00*x7 + x9*x5*a00 - c0011*x7 - c0010*x7; dx7/dt = x4*gamma1100 + gamma1000*x6 + x3*gamma0100 + b00*x7 - x9*x5*a00; dx8/dt = c0001*x7 - a10*x5*x8 + x2*b10 + x2*c1011 + b00*x7 + c0111*x1 - x9*x5*a00 - x5*x10*a01 + c0011*x7 + c0010*x7 + x1*b01; dx9/dt = x12*alpha10*x8 - gamma1000*x6 - beta10*x6; dx10/dt = -x4*beta11 - x4*gamma1100 - x4*gamma1101 - x4*gamma1110 + x12*alpha11*x11; dx11/dt = x4*beta11 + x4*gamma1100 + x4*gamma1101 + x4*gamma1110 - x12*alpha10*x8 - x12*alpha11*x11 - x12*alpha01*x10 + gamma1000*x6 + x3*beta01 + x3*gamma0100 + beta10*x6; dx12/dt = x12*alpha01*x10 - x3*beta01 - x3*gamma0100; y1 = x12; y2 = x8; y3 = x11; y4 = x9; y5 = x10