dx1/dt = x5*gamma1100 + gamma1000*x8 + x4*gamma0100 + b00*x1 - x10*x6*a00; dx2/dt = -a10*x6*x11 + x5*gamma1110 - x12*alpha10*x11 + x2*b10 + beta10*x8 + c0010*x1; dx3/dt = -x5*beta11 - x5*gamma1100 - x5*gamma1101 - x5*gamma1110 + x12*alpha11*x9; dx4/dt = x5*beta11 - x12*alpha11*x9 + x2*c1011 + c0111*x7 + c0011*x1; dx5/dt = -c0111*x7 + x6*x3*a01 - x7*b01; dx6/dt = a10*x6*x11 - x2*b10 - x2*c1011; dx7/dt = c0001*x1 + x5*gamma1101 - x12*alpha01*x3 + x4*beta01 - x6*x3*a01 + x7*b01; dx8/dt = -c0001*x1 - b00*x1 + x10*x6*a00 - c0011*x1 - c0010*x1; dx9/dt = x5*beta11 + x5*gamma1100 + x5*gamma1101 + x5*gamma1110 - x12*alpha10*x11 - x12*alpha11*x9 - x12*alpha01*x3 + gamma1000*x8 + x4*beta01 + x4*gamma0100 + beta10*x8; dx10/dt = x12*alpha10*x11 - gamma1000*x8 - beta10*x8; dx11/dt = c0001*x1 - a10*x6*x11 + x2*b10 + x2*c1011 + b00*x1 + c0111*x7 - x10*x6*a00 - x6*x3*a01 + c0011*x1 + c0010*x1 + x7*b01; dx12/dt = x12*alpha01*x3 - x4*beta01 - x4*gamma0100; y1 = x6; y2 = x9; y3 = x10; y4 = x12; y5 = x3 + x11