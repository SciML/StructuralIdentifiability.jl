dx1/dt = c0001*x7 + x11*gamma1101 - x6*alpha01*x8 + x10*beta01 - x12*x8*a01 + x1*b01; dx2/dt = -c0001*x7 - b00*x7 + x4*x12*a00 - c0011*x7 - c0010*x7; dx3/dt = x11*beta11 + x11*gamma1100 + x11*gamma1101 + x11*gamma1110 - x6*alpha10*x5 - x6*alpha11*x3 - x6*alpha01*x8 + gamma1000*x2 + x10*beta01 + x10*gamma0100 + beta10*x2; dx4/dt = x6*alpha10*x5 - gamma1000*x2 - beta10*x2; dx5/dt = c0001*x7 - a10*x12*x5 + x9*b10 + x9*c1011 + b00*x7 + c0111*x1 - x4*x12*a00 - x12*x8*a01 + c0011*x7 + c0010*x7 + x1*b01; dx6/dt = x6*alpha01*x8 - x10*beta01 - x10*gamma0100; dx7/dt = x11*gamma1100 + gamma1000*x2 + x10*gamma0100 + b00*x7 - x4*x12*a00; dx8/dt = -x11*beta11 - x11*gamma1100 - x11*gamma1101 - x11*gamma1110 + x6*alpha11*x3; dx9/dt = -a10*x12*x5 + x11*gamma1110 - x6*alpha10*x5 + x9*b10 + beta10*x2 + c0010*x7; dx10/dt = x11*beta11 - x6*alpha11*x3 + x9*c1011 + c0111*x1 + c0011*x7; dx11/dt = -c0111*x1 + x12*x8*a01 - x1*b01; dx12/dt = a10*x12*x5 - x9*b10 - x9*c1011; y1 = x6; y2 = x3; y3 = x8; y4 = x12; y5 = x5; y6 = x4